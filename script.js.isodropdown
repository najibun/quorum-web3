const contractAddress = "0x1932c48b2bf8102ba33b4a6b545c32236e342f34"; // Alamat kontrak
const contractABI = [{"anonymous":false,"name":"StudentAddedOrUpdated","inputs":[{"indexed":false,"name":"nim","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"name","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"addStudent","inputs":[{"name":"_nim","type":"uint256","internalType":"uint256"},{"name":"_name","type":"string","internalType":"string"},{"name":"_gender","type":"string","internalType":"string"},{"name":"_birthDate","type":"string","internalType":"string"},{"name":"_city","type":"string","internalType":"string"},{"name":"_yearOfEntry","type":"uint256","internalType":"uint256"},{"name":"_program","type":"string","internalType":"string"},{"name":"_gpa","type":"uint256","internalType":"uint256"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"},{"constant":false,"name":"getStudent","inputs":[{"name":"_nim","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"string","internalType":"string"},{"name":"","type":"string","internalType":"string"},{"name":"","type":"string","internalType":"string"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"string","internalType":"string"},{"name":"","type":"uint256","internalType":"uint256"}],"type":"function","payable":false,"stateMutability":"view"},{"constant":false,"name":"studentCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"type":"function","payable":false,"stateMutability":"view"},{"constant":false,"name":"students","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"nim","type":"uint256","internalType":"uint256"},{"name":"gender","type":"string","internalType":"string"},{"name":"birthDate","type":"string","internalType":"string"},{"name":"city","type":"string","internalType":"string"},{"name":"yearOfEntry","type":"uint256","internalType":"uint256"},{"name":"program","type":"string","internalType":"string"},{"name":"gpa","type":"uint256","internalType":"uint256"}],"type":"function","payable":false,"stateMutability":"view"}]; // ABI kontrak

let web3, contract;

document.addEventListener("DOMContentLoaded", async () => {
  try {
    // Menginisialisasi Web3 langsung ke node Quorum
    web3 = new Web3("http://10.17.5.103/:22000"); // Ganti dengan RPC URL Quorum Anda
    
    // Menginisialisasi kontrak
    contract = new web3.eth.Contract(contractABI, contractAddress);
    
    document.getElementById("addStudent").addEventListener("click", () => {
      const newField = `
        <div class="row mb-3">
          <div class="col-md-1">
            <input type="text" class="form-control" placeholder="NIM" name="nim[]">
          </div>
          <div class="col-md-2">
            <input type="text" class="form-control" placeholder="Name" name="name[]">
          </div>
          <div class="col-md-1">
            <input type="text" class="form-control" placeholder="Gender" name="gender[]">
          </div>
          <div class="col-md-2">
            <input placeholder="Birth Date" class="form-control" type="text" name="birthDate[]">
          </div>
          <div class="col-md-1">
            <input type="text" class="form-control" placeholder="City" name="city[]">
          </div>
          <div class="col-md-2">
            <input type="text" class="form-control" placeholder="Year of Entry" name="yearOfEntry[]">
          </div>
          <div class="col-md-2">
            <input type="text" class="form-control" placeholder="Study Program" name="studyProgram[]">
          </div>
          <div class="col-md-1">
            <input type="text" class="form-control" placeholder="IPK" name="gpa[]">
          </div>
        </div>`;
      document.getElementById("studentFields").insertAdjacentHTML("beforeend", newField);
    });

    document.getElementById("studentForm").addEventListener("submit", async (event) => {
      event.preventDefault();

      const formData = new FormData(event.target);

      const nims = formData.getAll("nim[]").map((val) => parseInt(val));
      const names = formData.getAll("name[]");
      const genders = formData.getAll("gender[]");
      const birthDates = formData.getAll("birthDate[]");
      const cities = formData.getAll("city[]");
      const yearsOfEntry = formData.getAll("yearOfEntry[]").map((val) => parseInt(val));
      const studyPrograms = formData.getAll("studyProgram[]");
      const gpas = formData.getAll("gpa[]").map((val) => parseFloat(val));

      try {
        const accounts = await web3.eth.getAccounts(); // Mendapatkan akun default
        await contract.methods
          .addStudent(nims, names, genders, birthDates, cities, yearsOfEntry, studyPrograms, gpas)
          .send({ from: accounts[0] });

        alert("Students added successfully");
      } catch (error) {
        console.error(error);
        alert("An error occurred while adding students" + error.message);
      }
    });
  } catch (error) {
    console.error("Error connecting to Quorum blockchain:", error);
    alert("Failed to connect to Quorum blockchain");
  }
});

